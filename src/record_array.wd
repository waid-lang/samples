include io

Circle: record =>
    radius => 0
    colour => ""

instance:
    area: func() =>
        pi => 3.14
        <- !(round pi * this'radius * this'radius 5)
    endfn

    info: func() =>
        <- "Color: " . this'colour . "; Area: " . !(toStr !this'area)
    endfn
endrc

floor: func(x) =>
    <- x - x % 1
endfn

pow: func(base, exp) =>
    if exp == 0:
        <- 1
    endif
    <- base * !(pow base exp - 1)
endfn

round: func(num, decimal_places) =>
    pow_10 => !(pow 10 decimal_places)
    <- !(floor 0.5 + pow_10 * num) / pow_10
endfn
main: func() =>
    circles => [
        !{Circle 12 "Green"},
        !{Circle 37 "Red"},
        !{Circle 46 "Blue"}
    ]

    x => 0
    while x < !(length circles), x +> 1:
        !(io::printLine !((x@circles)'info))
    endwl
endfn

!main
