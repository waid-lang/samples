include "io"

factorial_while: func(n) =>
    fact => 1
    while n > 0, n => n - 1:
        fact => fact * n
    endwl
    <- fact
endfn

factorial_rec: func(n) =>
    if n == 1:
        <- n
    endif
    <- n * !(factorial_rec n - 1)
endfn

factorial_dp: func(n) =>
    arr => [1]
    count => 1

    while count <= n, count => count + 1:
        (count @ arr) => count * (count - 1) @ arr
    endwl
    <- n @ arr
endfn

equal: func(x, y, z) =>
    <- x == y and y == z
endfn

main: func() =>
    num => !(toNum !io::input)
    !(io::printLine !(equal !(factorial_dp num) !(factorial_while num) !(factorial_rec num)))
endfn

!main
